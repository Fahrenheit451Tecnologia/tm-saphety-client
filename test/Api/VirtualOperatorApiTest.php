<?php
/**
 * VirtualOperatorApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * eInvoice Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1_7_0_4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * VirtualOperatorApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class VirtualOperatorApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for virtualOperatorAddCertificate
     *
     * Adds a new virtual operator outboundDocument certificate.
     *
     */
    public function testVirtualOperatorAddCertificate()
    {
    }

    /**
     * Test case for virtualOperatorCount
     *
     * Counts the number of results that match the search criteria.
     *
     */
    public function testVirtualOperatorCount()
    {
    }

    /**
     * Test case for virtualOperatorCreate
     *
     * Creates a new Virtual Operator.
     *
     */
    public function testVirtualOperatorCreate()
    {
    }

    /**
     * Test case for virtualOperatorDetails
     *
     * Gets a specific virtual operator.
     *
     */
    public function testVirtualOperatorDetails()
    {
    }

    /**
     * Test case for virtualOperatorGetByCompanyIdentification
     *
     * Gets the Virtual Operators by Company.
     *
     */
    public function testVirtualOperatorGetByCompanyIdentification()
    {
    }

    /**
     * Test case for virtualOperatorGetCertificate
     *
     * Gets the virtual operator outboundDocument certificate.
     *
     */
    public function testVirtualOperatorGetCertificate()
    {
    }

    /**
     * Test case for virtualOperatorGetLogo
     *
     * Gets Logo from virtual operator.
     *
     */
    public function testVirtualOperatorGetLogo()
    {
    }

    /**
     * Test case for virtualOperatorGetSettings
     *
     * Gets settings for a especific virtual operator.
     *
     */
    public function testVirtualOperatorGetSettings()
    {
    }

    /**
     * Test case for virtualOperatorGetSettingsByKey
     *
     * Gets settings for a especific virtual operator.
     *
     */
    public function testVirtualOperatorGetSettingsByKey()
    {
    }

    /**
     * Test case for virtualOperatorRemove
     *
     * Removes a virtual Operator.
     *
     */
    public function testVirtualOperatorRemove()
    {
    }

    /**
     * Test case for virtualOperatorRemoveCertificate
     *
     * Adds a new virtual operator outboundDocument certificate.
     *
     */
    public function testVirtualOperatorRemoveCertificate()
    {
    }

    /**
     * Test case for virtualOperatorSearch
     *
     * Gets the Virtual Operators that match a given criteria  Default NumberOfRecords=25.
     *
     */
    public function testVirtualOperatorSearch()
    {
    }

    /**
     * Test case for virtualOperatorUpdate
     *
     * Updates a virtual operator.
     *
     */
    public function testVirtualOperatorUpdate()
    {
    }

    /**
     * Test case for virtualOperatorUpdateSettingsValue
     *
     * Updates settings for a especific virtual operator.
     *
     */
    public function testVirtualOperatorUpdateSettingsValue()
    {
    }
}
